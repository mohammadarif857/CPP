 int trap(vector<int>& height) {
    /* int n=height.size();
        int maxl[n];
        int maxr[n];
        maxl[0]=height[0];
        maxr[n-1]=height[n-1];
      
        for(int i= 1;i<n;i++){
            maxl[i]=max(maxl[i-1],height[i]);
        }
        
        for(int i= n-2;i>=0;i--){
            maxr[i]=max(maxr[i+1],height[i]);
        }
        int water[n];
        int sum=0;
        for(int i=0;i<n;i++){
            water[i]=min(maxl[i],maxr[i]) -height[i];
            sum+=water[i];
        }
        return sum;*/
int ans=0;
        int n=height.size();
        int left=0,right=n-1;
        int leftmax=0,rightmax=0;
        while(left<=right)
        {
            
            if(height[left]<=height[right]){
                
            if(height[left]>=leftmax)
                leftmax=height[left];
            else 
                ans+=leftmax-height[left];
            
            left++;
        }
            else{
                if(height[right]>=rightmax)
                rightmax=height[right];
            else 
                ans+=rightmax-height[right];
            
            right--;
        }
            
        }
        return ans;
    }
};
